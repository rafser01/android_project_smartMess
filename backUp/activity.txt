package com.example.hp.smartmess2;

import android.content.res.Configuration;
import android.support.design.widget.NavigationView;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentManager;
import android.support.v4.view.GravityCompat;
import android.support.v4.widget.DrawerLayout;
import android.support.v7.app.ActionBar;
import android.support.v7.app.ActionBarDrawerToggle;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.support.v7.widget.Toolbar;
import android.view.MenuItem;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ExpandableListAdapter;
import android.widget.ExpandableListView;
import android.widget.ListView;
import android.widget.Toast;

import com.example.hp.smartmess2.model.ExpandedMenuModel;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

public class Admin_Menu extends AppCompatActivity {
    private Toolbar toolbar;
    private DrawerLayout drawerLayout;
    private NavigationView navigationView;
    private ActionBarDrawerToggle drawerToggle;
    private FragmentManager fragmentManager=getSupportFragmentManager();

    //-------------------
    ExpandableListAdapter mMenuAdapter;
    ExpandableListView expandableList;
    List<String> listDataHeader;
    HashMap<String, List<String>> listDataChild;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_admin__menu);
//        toolbar= (Toolbar) findViewById(R.id.toolbar);
//        setSupportActionBar(toolbar);
//        navigationView= (NavigationView) findViewById(R.id.nvView);
//        setUpNavigationContent(navigationView);
//        drawerLayout= (DrawerLayout) findViewById(R.id.drawerLayout);
//
//        drawerToggle=setActionBartoggle();
//        drawerLayout.addDrawerListener(drawerToggle);
//        drawerToggle.syncState();

        //--------------------------
        final ActionBar ab = getSupportActionBar();
        ab.setHomeAsUpIndicator(R.drawable.ic_menu);
        ab.setDisplayHomeAsUpEnabled(true);

        drawerLayout = (DrawerLayout) findViewById(R.id.drawerLayout);
        expandableList= (ExpandableListView) findViewById(R.id.navigationmenu);
        NavigationView navigationView = (NavigationView)    findViewById(R.id.nvView);

        if (navigationView != null) {
            setupDrawerContent(navigationView);
        }

        prepareListData();
        mMenuAdapter = new com.example.hp.smartmess2.adapter.ExpandableListAdapter(this, listDataHeader,   listDataChild, expandableList);

        expandableList.setAdapter(mMenuAdapter);
        expandableList.setOnGroupClickListener(new ExpandableListView.OnGroupClickListener() {
            @Override
            public boolean onGroupClick(ExpandableListView parent, View v, int groupPosition, long id) {

                if(listDataChild.get(listDataHeader.get(groupPosition))==null){
                    Toast.makeText(getApplicationContext(),"item id "+groupPosition,Toast.LENGTH_LONG).show();
                    drawerLayout.closeDrawers();
                }

                return false;
            }
        });
        expandableList.setOnChildClickListener(new ExpandableListView.OnChildClickListener() {
            @Override
            public boolean onChildClick(ExpandableListView parent, View v, int groupPosition, int childPosition, long id) {
                    Toast.makeText(getApplicationContext(),"id "+childPosition+" header "+groupPosition,Toast.LENGTH_LONG).show();
                    drawerLayout.closeDrawers();
                return false;
            }
        });

    }

    public void setUpNavigationContent(NavigationView navigationView){
        navigationView.setNavigationItemSelectedListener(new NavigationView.OnNavigationItemSelectedListener() {
            @Override
            public boolean onNavigationItemSelected(MenuItem item) {
                drawerSelectedAction(item);
                return true;
            }
        });
    }

    public void drawerSelectedAction(MenuItem item){

        Fragment   fragment=null;
        Class fragmentClass;
//        switch (item.getItemId()){
//            case R.id.nav_purchase:
//                fragmentClass=Purchase.class;
//                break;
//            case R.id.nav_sell:
//                fragmentClass=Sale.class;
//                break;
//            case R.id.nav_stockList:
//                fragmentClass=StockList.class;
//                break;
//            default:
//                fragmentClass=StockList.class;
//        }

//        try {
//            fragment=(Fragment) fragmentClass.newInstance();
//        } catch (InstantiationException e) {
//            e.printStackTrace();
//        } catch (IllegalAccessException e) {
//            e.printStackTrace();
//        }

//        fragmentManager.beginTransaction().replace(R.id.flContent,fragment).commit();
        setTitle(item.getTitle());
        item.setChecked(true);
        drawerLayout.closeDrawers();

    }

    public ActionBarDrawerToggle setActionBartoggle(){
        return  new ActionBarDrawerToggle(this,drawerLayout,toolbar,R.string.navigation_drawer_open,R.string.navigation_drawer_close );
    }

    @Override
    public void onConfigurationChanged(Configuration newConfig) {
        super.onConfigurationChanged(newConfig);
        // Pass any configuration change to the drawer toggles

        drawerToggle.onConfigurationChanged(newConfig);
    }

//    public boolean onOptionsItemSelected(MenuItem item){
//
//        if (drawerToggle.onOptionsItemSelected(item)) {
//
//            return true;
//        }
//        return super.onOptionsItemSelected(item);
//    }

//    protected void onPostCreate(Bundle savedInstanceState){
//
//        super.onPostCreate(savedInstanceState);
//        drawerToggle.syncState();
//    }

    //---------new method starts here ------
    private void setupDrawerContent(NavigationView navigationView) {
        navigationView.setNavigationItemSelectedListener(
                new NavigationView.OnNavigationItemSelectedListener() {
                    @Override
                    public boolean onNavigationItemSelected(MenuItem menuItem) {
                        Toast.makeText(getApplicationContext(),"id "+menuItem.getItemId(),Toast.LENGTH_LONG).show();
                        menuItem.setChecked(true);
                        drawerLayout.closeDrawers();
                        return true;
                    }
                });
    }

    private void prepareListData() {
        listDataHeader = new ArrayList<String>();
        listDataChild = new HashMap<String, List<String>>();

        // Adding data header
        listDataHeader.add("heading1");
        listDataHeader.add("heading2");
        listDataHeader.add("heading3");

        // Adding child data
        List<String> heading1= new ArrayList<String>();
        heading1.add("Submenu of item 1");


        List<String> heading2= new ArrayList<String>();
        heading2.add("Submenu of item 2");
        heading2.add("Submenu of item 2");
        heading2.add("Submenu of item 2");


        listDataChild.put(listDataHeader.get(0), heading1);// Header, Child data
        listDataChild.put(listDataHeader.get(1), heading2);

    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        switch (item.getItemId()) {
            case android.R.id.home:
                drawerLayout.openDrawer(GravityCompat.START);
                return true;
        }
        return super.onOptionsItemSelected(item);
    }
}



